[{"C:\\Users\\l\\Desktop\\code\\React\\task\\mytask\\src\\Films\\Films.tsx":"1","C:\\Users\\l\\Desktop\\code\\React\\task\\mytask\\src\\index.tsx":"2","C:\\Users\\l\\Desktop\\code\\React\\task\\mytask\\src\\reportWebVitals.ts":"3","C:\\Users\\l\\Desktop\\code\\React\\task\\mytask\\src\\api.ts":"4","C:\\Users\\l\\Desktop\\code\\React\\task\\mytask\\src\\FilmPreview\\FilmPreview.tsx":"5","C:\\Users\\l\\Desktop\\code\\React\\task\\mytask\\src\\constants.ts":"6"},{"size":575,"mtime":1611555172848,"results":"7","hashOfConfig":"8"},{"size":486,"mtime":1611512287675,"results":"9","hashOfConfig":"8"},{"size":425,"mtime":1611507385841,"results":"10","hashOfConfig":"8"},{"size":281,"mtime":1611531629381,"results":"11","hashOfConfig":"8"},{"size":461,"mtime":1611516888363,"results":"12","hashOfConfig":"8"},{"size":55,"mtime":1611511855044,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"hnud9g",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\l\\Desktop\\code\\React\\task\\mytask\\src\\Films\\Films.tsx",["29"],"import React from 'react';\nimport { useQuery, useQueryClient } from 'react-query';\nimport Film from 'swapi-typescript/dist/models/Film';\nimport { api } from '../api';\nimport FilmPreview from '../FilmPreview/FilmPreview';\n\n\n\nconst Films: React.FC = () => {\n  const queryClient = useQueryClient()\n  const { isLoading, error, data } = useQuery('films', api.films)\n  \n  if (isLoading) return <> 'Loading...' </>\n  \n  if (error) return  <> 'An error has occurred: ' +  error.message </>\n  \n  return data.map((film: Film) => <FilmPreview data={film} />)\n};\n\n\nexport default Films;\n",["30","31"],"C:\\Users\\l\\Desktop\\code\\React\\task\\mytask\\src\\index.tsx",[],"C:\\Users\\l\\Desktop\\code\\React\\task\\mytask\\src\\reportWebVitals.ts",[],"C:\\Users\\l\\Desktop\\code\\React\\task\\mytask\\src\\api.ts",[],"C:\\Users\\l\\Desktop\\code\\React\\task\\mytask\\src\\FilmPreview\\FilmPreview.tsx",[],"C:\\Users\\l\\Desktop\\code\\React\\task\\mytask\\src\\constants.ts",[],["32","33"],{"ruleId":"34","severity":1,"message":"35","line":10,"column":9,"nodeType":"36","messageId":"37","endLine":10,"endColumn":20},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},"@typescript-eslint/no-unused-vars","'queryClient' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["44"],"no-negated-in-lhs",["45"],["44"],["45"],"no-global-assign","no-unsafe-negation"]